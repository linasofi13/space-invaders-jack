class JuegoNave{

    field Nave player;
    field int totalAliens;
    field int playerShootsFlag;  //a flag that tells us if there is a player's bullet on the screen at this time 
    field int alienShootsFlag;  //a flag that tells us if there is a aliens's bullet on the screen at this time 
    field int pointsPlayer; // how many aliens player has killed
    field int livesPlayer;
    field int sizeAlien; // when shooting, comparing to x,y position of alien, but need to also check surroudings of that x,y since alien is bigger than a x,y position 
    field LinkedList aliens;

    constructor JuegoNave new(){
        let player = Nave.new();
        let totalAliens = 25;
        let playerShootsFlag = 0;
        let alienShootsFlag = 0; 
        let pointsPlayer = 0;
        let livesPlayer = 5;
        let sizeAlien = 5; // testing the size of the alien for the shoot to cover all its body
        do generateAliens();
        return this;
    }
    
    method void generateAliens(){
        var int x, y, i;
        let x = 100;    // x-pos of the first alien
        let y = 20;     // y-pos of the first alien
        let i = 0;
        let aliens = LinkedList.new();
        while(i < totalAliens){
            do aliens.add(Alien.new(x, y,i));
            let x = x + 57;
            let i = i + 1;
            if (i = 5){
                let y = y + 25;
                let x = 100;
            }
            if (i = 10){
                let y = y + 25;
                let x = 100;
            }
            if(i = 15){
                let y = y + 25;
                let x = 100;
            }
            if(i = 20){
                let y = y + 25;
                let x = 100;
            }
        }
    
        return;
    }
   
    method void dispose() {
        do player.dispose();
        do Memory.deAlloc(this);
        return;
    }


    method void shootPathPlayer (Shoot shoot){
        if (shoot.getY() < 11){
            let playerShootsFlag = 0;
			do shoot.dispose();
        }
        return;

	}

    method void shootPathAlien (Shoot shoot){
        if (shoot.getY() > 243){
            let alienShootsFlag = 0;
			do shoot.dispose();
        }
		return;
    }



    method void run() {
        var char tecla;
        var boolean exit;
        var Shoot playerShoots; // por q un disparo instanciado es playerShoots y no Shoot jsjjs (causa confusion)
        var Shoot alienShoots;  
        var Alien devuelta;  //This is the alien that is shooting at this moment 
        let exit = false;

        do Output.moveCursor(0,0);
		do Output.printString("Points: ");
		do Output.printInt(pointsPlayer);
		do Output.printString("      Lives Left: ");
		do Output.printInt(livesPlayer);

        while (~exit){
            while (tecla = 0) {
                if (playerShootsFlag = 1){
                    let playerShoots = player.getShoot();
                    do playerShoots.shoot(1); //1 is for player 2 is for aliens 
                    do shootPathPlayer(playerShoots);
                    if (aliens.shootColisionAlien(playerShoots)){
                        let playerShootsFlag = 0;
                    }
                    //let colisionAlien = shootColisionAlien(playerShoots); // method to check if players shoot hits alien
                    //if(colisionAlien = 1){
                      //  do playerShoot.dispose();
                        // let playerShootFlag = 0;
                    //}
                }

                /*
                if (alienShootsFlag = 0){
                    do devuelta.createShoot();
                    let alienShootsFlag = 1;
                }
                if (alienShootsFlag = 1 ){
                    let alienShoots = devuelta.getShoot();
                    do alienShoots.shoot(2);    //1 is for player 2 is for aliens 
                    do shootPathAlien(alienShoots);
                   
                }
                */
                let tecla = Keyboard.keyPressed();
                do aliens.moverAlien(); 
            }
            if (tecla = 81) { 
                let exit = true; //Q  QUIT
            }
            if ((playerShootsFlag = 0) & (tecla = 32) ){ 
                do player.createShoot();
                let playerShootsFlag = 1;
            }
           

            while (~(tecla = 0)) {  
                let tecla = Keyboard.keyPressed();
                do aliens.moverAlien(); 
                do player.movement(tecla); 
                if (playerShootsFlag = 1){
                    let playerShoots = player.getShoot();
                    do playerShoots.shoot(1); //1 is for player 2 is for aliens 
                    do shootPathPlayer(playerShoots);
                    if (aliens.shootColisionAlien(playerShoots)){
                        let playerShootsFlag = 0;
                    }
                }
                
                /*
                if (alienShootsFlag = 0){
                    do devuelta.createShoot();
                    let alienShootsFlag = 1;
                }

                if (alienShootsFlag = 1 ){
                    let alienShoots = devuelta.getShoot();
                    do alienShoots.shoot(2); //1 is for player 2 is for aliens 
                    do shootPathAlien(alienShoots);
                }
                */
            }
        }
        return;
    }
}
